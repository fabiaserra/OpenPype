stages:
  - build
  - build-op-container
  - deploy-deadline
  - deploy
  - release

build-docker:
  stage: build
  tags:
    - kube
  image:
    name: "ubuntu:jammy"
  variables:
    BUILD_OS: ubuntu22.04
  script:
    - apk add --no-cache bash
    - apk add --no-cache curl
    - apk add --no-cache python3
    - ./tools/docker_build.sh $BUILD_OS
    - version_command="import os;exec(open(os.path.join('./', 'openpype', 'version.py')).read());print('.'.join(__version__.split('.')[:2]));"
    - openpype_version="$(python3 -c "${version_command}")"
    - echo "openpype_version=$openpype_version" >> build.env
    - "tar -czvf ./build/openpype-${openpype_version}-${BUILD_OS}.tar.gz ./build"
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file ./build/openpype-${openpype_version}-${BUILD_OS}.tar.gz "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/openpype/${openpype_version}/openpype-${openpype_version}-${BUILD_OS}.tar.gz"'
  artifacts:
    reports:
      dotenv: build.env
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == "release/alkemyx"
      when: manual
    - if: $CI_COMMIT_BRANCH == "release/alkemyx-develop"
      when: manual

build-patch:
  stage: build
  image: python:3.9
  script:
    - mkdir -p $CI_PROJECT_DIR/artifact/build
    # Proc dies after creating the poetry env on first run. Just run it twice
    - ./tools/create_zip.sh --path $CI_PROJECT_DIR/artifact/build
    - ./tools/create_zip.sh --path $CI_PROJECT_DIR/artifact/build
  artifacts:
    paths:
      - artifact
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: manual
  allow_failure: false

deploy-patch:
  image: alpine:latest
  tags:
    - mnt-pipe
  stage: deploy
  script:
    - cp -R ./artifact/build/* /pipe/openpype/versions/
    - chown -R 1000:776523089 /pipe/openpype/versions
  dependencies:
    - build-patch
  needs:
    - build-patch
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: always

release-patch:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script:
    - apk add --no-cache python3
    - version_command="import os;exec(open(os.path.join('./', 'openpype', 'version.py')).read());print(__version__);"
    - openpype_version="$(python3 -c "${version_command}")"
    - >
      if release-cli get --tag-name "${openpype_version}"; then
        echo "Release "${openpype_version}" already exists, updating..."
        release-cli update --description "Release ${openpype_version} using CI pipeline $CI_PIPELINE_ID" --tag-name "${openpype_version}"
      else
        echo "Release "${openpype_version}" does not exist, creating..."
        release-cli create --description "Release ${openpype_version} using CI pipeline $CI_PIPELINE_ID" --tag-name "${openpype_version}"
      fi
  needs:
    - deploy-patch
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: always

build-op-container:
  stage: build-op-container
  needs:
    - build-docker
  tags:
    - kube
  image:
    name: gcr.io/kaniko-project/executor:v1.14.0-debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"auth\":\"$(echo -n ci:$CW_GROUP_CI_TOKEN | base64)\"}}}" > /kaniko/.docker/config.json
    - >
      /kaniko/executor
      --context "${CI_PROJECT_DIR}/op-container"
      --dockerfile "${CI_PROJECT_DIR}/op-container/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/openpype:jammy-${VERSION}-${CI_COMMIT_SHORT_SHA}"
      --cache=true --cache-copy-layers=true --cache-repo "${CI_REGISTRY_IMAGE}/cache/${IMAGE_NAME}" --cache-dir=/cache
  rules:
    - if: $CI_COMMIT_TAG
      when: never

deploy-to-deadline:
  image: alpine:latest
  tags:
    - mnt-deadline
  stage: build
  script:
    - apk add rsync
    - rsync -avh --chmod=777 --chown=995:776523089 $CI_PROJECT_DIR/openpype/modules/deadline/repository/custom/plugins/* /deadline-10-2-1-1//custom/plugins/
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == "release/alkemyx"
      changes:
        - openpype/modules/deadline/repository/custom/plugins/**/*
    - if: $CI_COMMIT_BRANCH == "release/alkemyx-develop"
      when: manual
